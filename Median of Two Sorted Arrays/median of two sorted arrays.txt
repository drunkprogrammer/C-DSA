class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int size1=nums1.size();
        int size2=nums2.size();
        vector<int> nums3;
        if(size1==0&&size2==0)
            return 0;
        if(size1>size2)
        {
            for(int i=0;i<size2;i++)
            {
                 if(nums1[i]>nums2[i])
                {
                    nums3.push_back(nums2[i]);
                    nums3.push_back(nums1[i]);
                }
                else
                {
                    nums3.push_back(nums1[i]);
                    nums3.push_back(nums2[i]);
                }
            }
            for(int i=size2;i<size1;i++)
            {
              nums3.push_back(nums1[i]);
            }    
        }
        else
        {
             for(int i=0;i<size1;i++)
            {
                 if(nums1[i]>nums2[i])
                {
                    nums3.push_back(nums2[i]);
                    nums3.push_back(nums1[i]);
                }
                else
                {
                    nums3.push_back(nums1[i]);
                    nums3.push_back(nums2[i]);
                }
            }
            for(int i=size1;i<size2;i++)
            {
              nums3.push_back(nums1[i]);
            }    
            
        }
        if((size1+size2)%2==1)
            return (nums3[(size1+size2-1)/2]);
        else
        {
            return ((nums3[(size1+size2)/2]+nums3[((size1+size2)/2)-1])/2);
        }
    }
};